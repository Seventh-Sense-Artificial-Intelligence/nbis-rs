name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
    - name: Run Rust tests
      run: cargo test --release --all

  build-python-bindings:
    name: Build Python Wheel (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Install Python + maturin
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install maturin
      run: pip install maturin twine

    - name: Build wheel
      run: maturin build --release --manifest-path Cargo.toml --out dist

    - name: Patch wheel
      run: ./patch_maturin_wheel.sh

    - name: Check wheel integrity
      run: twine check dist/*

  test-python-bindings:
    name: Run Pytest on Python Wheel
    runs-on: ubuntu-latest
    needs: [build-python-bindings]

    steps:
    - uses: actions/checkout@v4

    - name: Install Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Download built wheel
      uses: actions/download-artifact@v4
      with:
        name: ubuntu-wheel
        path: dist/

    - name: Install wheel and test dependencies
      run: |
        python -m venv .venv
        source .venv/bin/activate
        pip install dist/*.whl
        pip install -r bindings/python/tests/requirements.txt

    - name: Run pytest
      run: |
        source .venv/bin/activate
        cd bindings/python/tests
        pytest -v
    
    - name: Upload wheel as artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ runner.os }}-wheel
        path: dist/*.whl
